server:
  port: 9002

dubbo:
  registry:
    # 挂载到 Spring Cloud 注册中⼼
    address: spring-cloud://localhost
  cloud:
    # 订阅服务提供⽅的应⽤列表，订阅多个服务提供者使⽤ "," 连接
    subscribed-services: service-code

spring:
  application:
    name: service-gateway
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: localhost:8848
        namespace: f965f7e4-7294-40cf-825c-ef363c269d37
        group: DEFAULT_GROUP
        file-extension: yaml
    gateway:
      routes: # 路由可以有多个
        - id: service-code-router      # 我们自定义的路由 ID，保持唯一
          uri: lb://service-code
          # 断言：路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默 认方法来将 Predicate
          #组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/api/code/**

        - id: service-user-router      # 我们自定义的路由 ID，保持唯一
          uri: lb://service-user
          # 断言：路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默 认方法来将 Predicate
          #组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/api/user/**

        - id: service-config-router      # 我们自定义的路由 ID，保持唯一
          uri: lb://service-config
          # 断言：路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默 认方法来将 Predicate
          #组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/api/config/**

        - id: service-mail-router      # 我们自定义的路由 ID，保持唯一
          uri: lb://service-mail
          # 断言：路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默 认方法来将 Predicate
          #组合成其他复杂的逻辑（比如：与，或，非）。
          predicates:
            - Path=/api/mail/**
    sentinel:
      transport:
        # sentinel dashboard/console 地址
        dashboard: 127.0.0.1:8080
        #sentinel会在该端⼝启动http server，那么这样的话，控制台定义的⼀些限流等规则才能发送传递过来，
        #如果8719端⼝被占⽤，那么会依次+1
        port: 8719
#  redis:
#    host: localhost
#    port: 6379
#    database: 0
